[tool.poetry]
package-mode = false
name = "viqzo"
version = "0.1.0"
description = ""
authors = ["HETPAHEP"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
Django = "4.2.2"
djangorestframework = "3.14.0"
python-dotenv = "1.0.0"
pytelegrambotapi = "4.12.0"
djoser = "2.2.0"
cffi = "^1.16.0"
django-filter = "23.2"
djangorestframework-simplejwt = "5.2.2"

[tool.poetry.group.dev.dependencies]
mypy = "1.4.1"
isort = "5.12.0"
flake8 = "6.0.0"
pytest = "7.4.0"
pytest-django = "4.5.2"
coverage = "7.2.7"
pillow = "10.0.0"
commitizen = "3.15.0"
drf-spectacular = "0.27.1"
ruff = "^0.5.7"
pre-commit = "^3.8.0"


[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "poetry"
update_changelog_on_bump = true
major_version_zero = true
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "viqzo.dev-settings"
pythonpath = "backend"
norecursedirs = [
    "env/*",
    "venv/*"
]
addopts = "-vv --lf -p no:cacheprovider"
testpaths = "tests/"
python_files = "test_*.py"
disable_test_id_escaping_and_forfeit_all_rights_to_community_support = true


[tool.isort]
py_version = 312
line_length = 79
profile = "black"
lines_after_imports = 2
include_trailing_comma = true
skip = ["__init__.py"]


[tool.flake8]
max-line-leght = 79
max-complexity = 10
exclude = '''
    pyproject.toml
    tests/
    */migrations/
    venv/,
    env/,
    __init__.py
'''


[tool.mypy]
warn_unused_configs = false
exclude = [
    "tests/"
]


[tool.ruff]
target-version = "py312"
line-length = 79
src = ["backend"]
exclude = [
    "tests",
    "venv",
    "migrations"

]


[tool.ruff.lint]
extend-select = [
    "C4",
    "SIM",
    "TCH",
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP",  # pyupgrade

]

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = [
    "E402",  # module-import-not-at-top-of-file
    "F401"  # Module imported but unused
]

[tool.ruff.lint.isort]
known-third-party = ["fastapi", "pydantic", "starlette"]
lines-after-imports = 2
length-sort = true
known-local-folder = ["backend"]